#include "sys/alt_stdio.h"
#include <stdint.h>
#include <unistd.h>
#include "system.h"
#include "altera_avalon_pio_regs.h"

int read_memory(void);

volatile int wait_flag;
int main()
{ 


	volatile uint16_t t;
	//volatile uint16_t s;
	//volatile char x;
	t = 1;

	IOWR_ALTERA_AVALON_PIO_DATA(PIO_MODE_SELOUT_BASE, 0x0);
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_KEYOUT_BASE, 0x7);
	wait_flag = 0;
	alt_putstr("Hello from Nios II!\n");
	/* Event loop never exits. */

	while (1) {
		t = alt_getchar();
		alt_putchar(t);
		if(t == 'A'){
			if(wait_flag == 1){
				alt_putstr("read start\n");
				read_memory();
				//s=IORD_ALTERA_AVALON_PIO_DATA(KEY_BASE);
				//alt_printf("%x",s);
				wait_flag = 0;
			}
			else{
				wait_flag = 1;
			}
		}
		else{
			wait_flag = 0;
		}
	}




	//usleep(120000);
	return 0;
}
int read_memory(){
	volatile unsigned char memory[256]={};
	volatile int i;
	volatile uint16_t t;

	IOWR_ALTERA_AVALON_PIO_DATA(PIO_MODE_SELOUT_BASE, 0x4);
	usleep(20000);
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_KEYOUT_BASE, 0xF);
	usleep(20000);
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_KEYOUT_BASE, 0xD);
	usleep(20000);
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_KEYOUT_BASE, 0xF);
	usleep(20000);
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_MODE_SELOUT_BASE, 0x6);
	usleep(20000);
	for(i=0;i<256;i++){
		t=IORD_ALTERA_AVALON_PIO_DATA(PIO_DATAIN_BASE);
		IOWR_ALTERA_AVALON_PIO_DATA(PIO_KEYOUT_BASE, 0xE);
		usleep(20000);
		IOWR_ALTERA_AVALON_PIO_DATA(PIO_KEYOUT_BASE, 0xF);
		usleep(20000);

		memory[i]=(t & 0x000F)|(t & 0x00F0);
		alt_printf("%x ",i);
		alt_printf("%x",memory[i]);
		alt_putstr("\n");
	}
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_MODE_SELOUT_BASE, 0x0);
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_KEYOUT_BASE, 0x0);
	return 0;
}
